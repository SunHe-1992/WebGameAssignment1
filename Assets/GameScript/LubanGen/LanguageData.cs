
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class LanguageData : Luban.BeanBase
{
    public LanguageData(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsString) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { var __json0 = _buf["Lans"]; if(!__json0.IsArray) { throw new SerializationException(); } Lans = new System.Collections.Generic.Dictionary<string, string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string _k0;  { if(!__e0[0].IsString) { throw new SerializationException(); }  _k0 = __e0[0]; } string _v0;  { if(!__e0[1].IsString) { throw new SerializationException(); }  _v0 = __e0[1]; }  Lans.Add(_k0, _v0); }   }
    }

    public static LanguageData DeserializeLanguageData(JSONNode _buf)
    {
        return new LanguageData(_buf);
    }

    public readonly string ID;
    public readonly System.Collections.Generic.Dictionary<string, string> Lans;
   
    public const int __ID__ = -1928011966;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "Lans:" + Luban.StringUtil.CollectionToString(Lans) + ","
        + "}";
    }
}

}
