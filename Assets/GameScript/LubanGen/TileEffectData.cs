
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class TileEffectData : Luban.BeanBase
{
    public TileEffectData(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["Name"].IsString) { throw new SerializationException(); }  Name = _buf["Name"]; }
        { if(!_buf["Avoid"].IsNumber) { throw new SerializationException(); }  Avoid = _buf["Avoid"]; }
        { if(!_buf["Heal"].IsNumber) { throw new SerializationException(); }  Heal = _buf["Heal"]; }
        { if(!_buf["UnBreakable"].IsBoolean) { throw new SerializationException(); }  UnBreakable = _buf["UnBreakable"]; }
        { if(!_buf["MoveCost"].IsNumber) { throw new SerializationException(); }  MoveCost = _buf["MoveCost"]; }
        { if(!_buf["Mov"].IsNumber) { throw new SerializationException(); }  Mov = _buf["Mov"]; }
        { if(!_buf["Def_foe"].IsNumber) { throw new SerializationException(); }  DefFoe = _buf["Def_foe"]; }
        { if(!_buf["Res_foe"].IsNumber) { throw new SerializationException(); }  ResFoe = _buf["Res_foe"]; }
        { if(!_buf["Def_ally"].IsNumber) { throw new SerializationException(); }  DefAlly = _buf["Def_ally"]; }
        { if(!_buf["Res_ally"].IsNumber) { throw new SerializationException(); }  ResAlly = _buf["Res_ally"]; }
        { if(!_buf["Damage"].IsNumber) { throw new SerializationException(); }  Damage = _buf["Damage"]; }
    }

    public static TileEffectData DeserializeTileEffectData(JSONNode _buf)
    {
        return new TileEffectData(_buf);
    }

    public readonly int ID;
    public readonly string Name;
    public readonly int Avoid;
    /// <summary>
    /// on turn start
    /// </summary>
    public readonly int Heal;
    public readonly bool UnBreakable;
    public readonly int MoveCost;
    /// <summary>
    /// on turn start
    /// </summary>
    public readonly int Mov;
    public readonly int DefFoe;
    public readonly int ResFoe;
    public readonly int DefAlly;
    public readonly int ResAlly;
    /// <summary>
    /// on turn start
    /// </summary>
    public readonly int Damage;
   
    public const int __ID__ = -893393335;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "Name:" + Name + ","
        + "Avoid:" + Avoid + ","
        + "Heal:" + Heal + ","
        + "UnBreakable:" + UnBreakable + ","
        + "MoveCost:" + MoveCost + ","
        + "Mov:" + Mov + ","
        + "DefFoe:" + DefFoe + ","
        + "ResFoe:" + ResFoe + ","
        + "DefAlly:" + DefAlly + ","
        + "ResAlly:" + ResAlly + ","
        + "Damage:" + Damage + ","
        + "}";
    }
}

}
